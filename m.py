import random
import pickle
import asyncio
from time import sleep
from pyrogram import Client, filters
from pyrogram.errors import FloodWait
from pyrogram.types import ChatPermissions
from pyrogram.raw import functions
import time
from time import sleep
import random
import textwrap
import os
import json, pickle

import sys
import asyncio
import time

from telethon.sync import TelegramClient
from telethon import TelegramClient
from telethon import events

red    = [206, 76,  54]
green  = [68,  250, 123]
blue   = [253, 127, 233]
yellow = [241, 250, 118]
orange = [255, 184, 107]
def colored(color, text):
    return "\033[38;2;{};{};{}m{}\033[38;2;255;255;255m".format(color[0], color[1], color[2], text)

app = Client('admin', api_id=19391779, api_hash='5d862c7657a0f2a5ba27cf560b52240b')

if os.sys.platform == "win32":
	os.system("cls")
else:
	os.system("clear")

entity = client.get_entity("me")
MY_ID = entity.id
print(
        "["
        + colored(green, "PROFILE: ")
        + str(entity.first_name)
        + " | " + colored(orange, "Id: ") + str(MY_ID)
        + " | " + colored(orange, "Uname: ") + "@" + str(entity.username)
        + "]"
)
@client.on(events.NewMessage(pattern=".t+"))
async def handler(event):
    if event.message.from_id.user_id != MY_ID:
        return

    try:
        if event.message.message.replace(".t ", "") == ".t":
            return

        text      = event.message.message.split(".t ", maxsplit=1)[1]
        orig_text = text
        message   = event.message
        chat      = event.chat_id

        tbp = "" # to be printed
        typing_symbol = "/"
     
        while(tbp != orig_text):
            typing_symbol = "_"
            await client.edit_message(chat, message, tbp + typing_symbol)
            await asyncio.sleep(0.1)

            tbp = tbp + text[0]
            text = text[1:]

            typing_symbol = "-"
            await client.edit_message(chat, message, tbp)
            await asyncio.sleep(0.1)
    except:
        print( "[" + colored(red, "Error") + "] " + "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É [.t] –í–æ–∑–º–æ–∂–Ω–æ –≤—ã —Å–ª–æ–≤–∏–ª–∏ flood." )
        
        heart_emoji = [
    "‚ú®-üíé",
    "‚ú®-üå∫",
    "‚òÅÔ∏è-üòò",
    "‚ú®-üå∏",
    "üåæ-üê∏",
    "üî´-üí•",
    "‚òÅÔ∏è-üíü",
    "üçÄ-üíñ",
    "üå¥-üêº",
]

edit_heart = '''
1 2 2 1 2 2 1
2 2 2 2 2 2 2
2 2 2 2 2 2 2
1 2 2 2 2 2 1
1 1 2 2 2 1 1
 1 1 1 2 1 1
'''

@client.on(events.NewMessage(pattern=".heart+"))
async def handler(event):
    if event.message.from_id.user_id != MY_ID:
        return

    try:
        text = event.message.message.replace(".heart ", "")
        if text == ".heart":
            text = "—Ö–æ—á–µ—à—å —Ç–∞–∫ –∂–µ? –∑–∞—Å–æ—Å–∏ —É –¥–∞—Ä–∫–æ–≤–∞"

        message   = event.message
        chat      = event.chat_id

        # play anim
        frame_index = 0
        while(frame_index != len(heart_emoji)):
            await client.edit_message(chat, message, edit_heart.replace("1", heart_emoji[frame_index].split("-")[0])
                                                               .replace("2", heart_emoji[frame_index].split("-")[1]))
            await asyncio.sleep(1)
            frame_index = frame_index + 1

        await client.edit_message(chat, message, text)
    except:
        print( "[" + colored(red, "Error") + "] " + "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É [.heart] –í–æ–∑–º–æ–∂–Ω–æ –≤—ã —Å–ª–æ–≤–∏–ª–∏ flood." )
        
baseNames = { "q", "qw", "qwe", "qwee", "qweef", "qweeff", "qweeffe", }
while True:
for name in baseNames:
app.send(functions.account.UpdateProfile(first_name=name))
time.sleep(1)

# –ö–æ–º–∞–Ω–¥–∞ type
@app.on_message(filters.command("type", prefixes=".") & filters.me)
def type(_, msg):
	orig_text = msg.text.split(".type ", maxsplit=1)[1]
	text = orig_text
	tbp = "" # to be printed
	typing_symbol = "‚ñí"

	while(tbp != orig_text):
		try:
			msg.edit(tbp + typing_symbol)
			sleep(0.05) 

			tbp = tbp + text[0]
			text = text[1:]

			msg.edit(tbp)
			sleep(0.05)

		except FloodWait as e:
			sleep(e.x)

 # –®–∞–±–ª–æ–Ω —Ç–µ–∫—Å—Ç–∞ –≤ —Å—Ç—Ä–æ—á–∫–∏
@app.on_message(filters.command("zxc", prefixes=".") & filters.me)
def valentine(app, msg):
	app.send_message(msg.chat.id, f'''
	<b>–∫–∏–¥–∞—é step, –ª–µ—á—É –ø—Ä—è–º –≤–≤–µ—Ä—Ö</b>
	''')
	sleep(1)
	app.send_message(msg.chat.id, f'''
	<b>–º–æ–π –∫—Ä–∞—Å–Ω—ã–π —Å–µ—Ç —É–±–∏–ª –∏—Ö –≤—Å–µ—Ö</b>
	''')
	sleep(1)
	app.send_message(msg.chat.id, f'''
	<b>—É –Ω–∏—Ö –≤ –±–∞—à–∫–µ –æ–¥–∏–Ω preset</b>
	''')
	sleep(1)
	app.send_message(msg.chat.id, f'''
	<b>—è –ø–æ–∫–∞–∂—É —Ç–æ–Ω–Ω–µ–ª—å–Ω—ã–π —Å–≤–µ—Ç</b>
	''')
	sleep(1)
	app.send_message(msg.chat.id, f'''
	<b>–∏–º –Ω–µ –Ω–∞–π—Ç–∏ –º–µ–Ω—è, —è —Å–∫—Ä—ã–ª—Å—è</b>
	''')
	sleep(1)
	app.send_message(msg.chat.id, f'''
	<b>—è –ø—Ä–æ–ø–∞–≤—à–∏–π –≤ dissmilate</b>
	''')
	sleep(1)
	app.send_message(msg.chat.id, f'''
	<b>—è –Ω–µ –æ—Å—Ç–∞–≤–ª—é –∏–º –∏ —Å–ª–µ–¥–∞</b>
	''')
	sleep(1)
	app.send_message(msg.chat.id, f'''
	<b>–∏–∑ –Ω–∏–æ—Ç–∫—É–¥–∞ –≤—ã–π–¥—É –≤ late</b>
	''')

	sleep(0.2)
	global number
	number = number + 1
	
	 # –®–∞–±–ª–æ–Ω —Ç–µ–∫—Å—Ç–∞ –≤ —Å—Ç—Ä–æ—á–∫–∏ 2
@app.on_message(filters.command("–Ω—Å–ø", prefixes=".") & filters.me)
def valentine(app, msg):
	app.send_message(msg.chat.id, f'''
	—è
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	–≤—ã–µ–±–∞–ª
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	—Ç–≤–æ—é
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	–º–∞–º—É
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	—Å—ã–Ω
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	—Å–≤–∏–Ω–æ–º–∞—Ç–∫–∏
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	–µ–±–ª–∏–≤–æ–π
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	—Ç–µ—Ä–ø–∏—à—å –º–æ–π –Ω–æ–Ω-—Å—Ç–æ–ø
	''')
	
		 # –®–∞–±–ª–æ–Ω —Ç–µ–∫—Å—Ç–∞ –≤ —Å—Ç—Ä–æ—á–∫–∏ 3
@app.on_message(filters.command("–Ω—Å–ø1", prefixes=".") & filters.me)
def valentine(app, msg):
	app.send_message(msg.chat.id, f'''
	–≥–¥–µ
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	–æ—Ç–ø–æ—Ä
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	—Å–µ–º–∏—Ö—É—é–ª–∏–Ω—Å–∫–æ–µ
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	–æ—Ç—Ä–µ–±—å–µ
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	—ç—Ç–æ–π
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	–∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	–∫–æ—Ç–æ—Ä—É—é
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	—Å—Ç–æ
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	—Ä–∞–∑
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	–Ω–∞—Ö–∞—Ä–∫–∞–ª–∏
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	–≤
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	–≤ —Ç–≤–æ—é
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	—Ä–∞–∑–±–∏—Ç—É—é
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	–Ω–∞ –¥–≤–µ —á–∞—Å—Ç–∏
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	—á–µ—Ä–µ–ø—É—à–∫—É
	''')
	
	 # –®–∞–±–ª–æ–Ω —Ç–µ–∫—Å—Ç–∞ –≤ —Å—Ç—Ä–æ—á–∫–∏ 4
@app.on_message(filters.command("—Å–æ—Å–∏", prefixes=".") & filters.me)
def valentine(app, msg):
	app.send_message(msg.chat.id, f'''
	—Å–æ—Å–∏
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	–∑–∞—Å–æ—Å–∏
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	—É—Å–æ—Å–∏
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	–ø—Ä–∏—Å–æ—Å–∏
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	–ø–æ—Å–æ—Å–∏
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	–¥–æ—Å–æ—Å–∏
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	–ø–µ—Ä–µ—Å–æ—Å–∏
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	–Ω–∞—Å–æ—Å–∏
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	–ø–æ–¥—Å–æ—Å–∏
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	–Ω–∞–¥—Å–æ—Å–∏
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	–≤—Å–æ—Å–∏
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	–æ–±—Å–æ—Å–∏
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	–∏–∑—Å–æ—Å–∏
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	–Ω–µ —Å–æ—Å–∏
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	—Ä–∞–∑—Å–æ—Å–∏
	''')
	
	 # –®–∞–±–ª–æ–Ω —Ç–µ–∫—Å—Ç–∞ –≤ —Å—Ç—Ä–æ—á–∫–∏ 5
@app.on_message(filters.command("–Ω—Å–ø2", prefixes=".") & filters.me)
def valentine(app, msg):
	app.send_message(msg.chat.id, f'''
	—è —Ç–µ–±—è –±—É–¥—É —à–≤—ã—Ä—è—Ç—å —Ç–µ–ª–æ—á–∫—É –µ–±–∞–Ω–Ω—É—é
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	–æ–∫—Ä–æ–≤–∞–≤–ª–µ–Ω–Ω—ã–π —Å—ã–Ω—É–ª—è —à–ª—é—Ö–∏ 
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	–∫—Ä–∞—Å–Ω—É—é –ø–ª–µ—Å–µ–Ω—å
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	—Ç–≤–æ–µ–π —à–∏–∑–æ—Ñ—Ä–µ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –º–∞—Ç–µ—Ä–∏ 
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	–∫–∏–Ω—É–ª –∫–∞–∫ –∫–æ—Å—Ç—å —Å–æ–±–∞–∫–µ
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	–∫–æ—à—É —Ç–≤–æ–µ –æ—Å–æ–∑–Ω–∞–Ω–∏–µ –∏ –¥–∞–∂–µ –Ω–µ —Å—Ç–µ—Å–Ω—è—é—Å—å
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	–≤–∑–æ—Ä–≤–∞–Ω–Ω—ã–π –∑–∞—á—É—Ö–∞–Ω–Ω—ã–π –¥—Ä—è–±–ª—ã–π —Å—ã–Ω—É–ª—è –∫—É—Ä—Ç–∏–∑–∞–Ω–∫–∏ 
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	—Ç—ã
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	–∑–∞—á–µ–º
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	–Ω–∞—à—ë–ª
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	—Å–µ–±—è
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	—Å—Ä–µ–¥–∏
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	—è—Ä–∫–∏—Ö
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	–∫—Ä–∞—Å–æ–∫
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	—Å–ø–µ—Ä–º—ã?
	''')
	
	 # –®–∞–±–ª–æ–Ω —Ç–µ–∫—Å—Ç–∞ –≤ —Å—Ç—Ä–æ—á–∫–∏ 6
@app.on_message(filters.command("–Ω—Å–ø3", prefixes=".") & filters.me)
def valentine(app, msg):
	app.send_message(msg.chat.id, f'''
	—á–µ—Ä–≤—è–º –ø—Ä–∏–∫–∞–∑ –æ—Ç–¥–∞–ª–∏ –ø–æ—Ç–∞–Ω—Ü–µ–≤–∞—Ç—å –≤ —Ç–≤–æ—ë–º –∫–∏—à–µ—á–Ω–∏–∫–µ
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	–∫–∞–∫ —Ç–µ –∑–∞–∫—Ä—É—Ç–∫–∞ –±—É—Ç—ã–ª–∫–∏ –ø–∏–≤–∞ –≤ –∫–∏—à–µ—á–Ω–∏–∫ –º–æ–∏–º –≤–µ–ª–∏–∫–æ–ª–µ–ø–Ω—ã–º –Ω–æ–Ω —Å—Ç–æ–ø–æ–º? 
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	–∑–∞—á–µ–º –ø—É—Ç–∞–µ—à—å –±–µ—Ñ–∏–¥–æ–∫ —Å –º–æ–µ–π –∫–æ–Ω—á–µ–π –∏ —Ö—É—è—Ä–∏—à—å –µ–≥–æ –Ω–∞ –∑–∞–≤—Ç—Ä–∞–∫? 
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	—è —Å–∏–≥–∞—Ä–µ—Ç—É –æ–± —Ç–≤–æ—ë –≥–ª–∞–∑–Ω–æ–µ —è–±–ª–æ–∫–æ —Ç—É—à—É, —Ç–µ–ø–µ—Ä—å –æ–Ω–æ –æ—Ç—Å–ª–∞–∏–≤–∞–µ—Ç—Å—è
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	–∞—Ö–∏—Ö–∏–≤—Ö–∏—Ö—Ö–∞—Ö–∏–ø
	''') 
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	—è —â–∞—Å –º–∞—Ç–µ—Ä–∏ —Ç–≤–æ–µ–π –∫–æ—Å—Ç–∏ —Ä–∞—Å–ø–∏–ª—é –∏ –¥–∞–º —Ç–µ–±–µ –ø–æ–≥—Ä—ã–∑—Ç—å
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	—Å–∫—Ä—É—á–∏–≤–∞–π –ª–∞—Å—Ç—ã —Å—ã–Ω—É–ª—è —à–ª—é—Ö–∏ 
	''')
	sleep(0.1)
	app.send_message(msg.chat.id, f'''
	—è —Ç–µ–±–µ —Ç–≤–æ–µ —Å–∞—Å–∞–ª–∏—â–µ –∑–∞—Ä—ã–≥–∞–Ω–Ω–æ–µ –≤ –º—è—Å–∏—â–µ —Ä–∞–∑—Ö—É—è—Ä–∏–ª —É–∂–µ
	''')
	
#–†–∞–Ω–¥–æ–º–∞–π–∑–µ—Ä
@app.on_message(filters.command("random", prefixes=".") & filters.me)
def random_(_, msg):
	random_number = str(random.randint(0, int(msg.command[1])))
	msg.edit(roi + random_number)



too = random.randint(0, 100)
roi = f'<b> –°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ: </b>'

#1000-7
@app.on_message(filters.command("ghoul", prefixes=".") & filters.me)
def valentine(app, message):
	global number
	i = 1000
	while i > 0:
		try:
			app.send_message(message.chat.id, f'{i} - 7 = {i-7}')
		except FloodWait as e:
			sleep(e.x)

		i -= 7
		sleep(0)

	if(end_message != ''):
		app.send_message(message.chat.id, end_message)

#–°–ø–∞–º–µ—Ä
@app.on_message(filters.command("spam", prefixes=".") & filters.me)
def spam(app, msg):
	spams = " ".join(msg.command[2:])

	global number

	if not spams:
		msg.edit(f'''
			**Error: –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .spam <–∫–æ–ª-–≤–æ —Å–ø–∞–º–∞> <—Å–ª–æ–≤–æ>**''')
		sleep(1.5)
		msg.delete()
	else:
		for _ in range(int(msg.command[1])):
			app.send_message(msg.chat.id, spams)

#–ü—Ä–∞–≤–¥–∞/–õ–æ–∂—å
@app.on_message(filters.command("tf", prefixes=".") & filters.me)
def betaloves(_, msg):
	t = ["[–ø—Ä–∞–≤–¥–∞]", "[–ª–æ–∂—å]"]

	try0 = random.choice(t)
	try1 = " ".join(msg.command[1:])

	if not try1:
		msg.edit(f'''
			**Error: –í—ã –Ω–µ –≤–≤–µ–ª–∏ –≤–æ–ø—Ä–æ—Å!\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .tf <–≤–æ–ø—Ä–æ—Å>**''')
		sleep(1.5)
		msg.delete()
	else:
		msg.edit(f'''
			{try1} {try0}''')

	sleep(5)
	global number
	number = number + 1		

@app.on_message(filters.command("help", prefixes=".") & filters.me)
def valentine(app, msg):
	app.send_message(msg.chat.id, f'''
	<b>–≤—Å–µ –∫–º–¥ —Å —Ç–æ—á–∫–æ–π –≤ –Ω–∞—á–∞–ª–µ: –Ω—Å–ø(1-3)(–Ω–æ–Ω-—Å—Ç–æ–ø –Ω–∞ –±—ã—Å—Ç—Ä–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏ —Ç–µ–∫—Å—Ç–∞); ghoul(–≤—ã—á–∏—Ç–∞–µ–º —Å —Ç—ã—Å—è—á–∏ —Å–µ–º—å); type [—Ç–µ–∫—Å—Ç] (–∞–Ω–∏–º–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞); tf [—Ç–µ–∫—Å—Ç] (–ø—Ä–∞–≤–¥–∞/–ª–æ–∂—å); spam [–∫–æ–ª-–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–∏] [—Ç–µ–∫—Å—Ç] (–æ–±—ä—è—Å–Ω—è—Ç—å –¥—É–º–∞—é –Ω–µ –Ω–∞–¥–æ)</b>
	''')
	
@app.on_message(filters.command("—Ö–µ–ª–ø", prefixes=".") & filters.me)
def valentine(app, msg):
	app.send_message(msg.chat.id, f'''
	<b>–≤—Å–µ –∫–º–¥ —Å —Ç–æ—á–∫–æ–π –≤ –Ω–∞—á–∞–ª–µ: –Ω—Å–ø(1-3)(–Ω–æ–Ω-—Å—Ç–æ–ø –Ω–∞ –±—ã—Å—Ç—Ä–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏ —Ç–µ–∫—Å—Ç–∞); ghoul(–≤—ã—á–∏—Ç–∞–µ–º —Å —Ç—ã—Å—è—á–∏ —Å–µ–º—å); type [—Ç–µ–∫—Å—Ç] (–∞–Ω–∏–º–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞); tf [—Ç–µ–∫—Å—Ç] (–ø—Ä–∞–≤–¥–∞/–ª–æ–∂—å); spam [–∫–æ–ª-–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–∏] [—Ç–µ–∫—Å—Ç] (–æ–±—ä—è—Å–Ω—è—Ç—å –¥—É–º–∞—é –Ω–µ –Ω–∞–¥–æ)</b>
	''')
	
@app.on_message(filters.command("–ø–æ–º–æ—â—å", prefixes=".") & filters.me)
def valentine(app, msg):
	app.send_message(msg.chat.id, f'''
	<b>–≤—Å–µ –∫–º–¥ —Å —Ç–æ—á–∫–æ–π –≤ –Ω–∞—á–∞–ª–µ: –Ω—Å–ø(1-3)(–Ω–æ–Ω-—Å—Ç–æ–ø –Ω–∞ –±—ã—Å—Ç—Ä–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏ —Ç–µ–∫—Å—Ç–∞); ghoul(–≤—ã—á–∏—Ç–∞–µ–º —Å —Ç—ã—Å—è—á–∏ —Å–µ–º—å); type [—Ç–µ–∫—Å—Ç] (–∞–Ω–∏–º–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞); tf [—Ç–µ–∫—Å—Ç] (–ø—Ä–∞–≤–¥–∞/–ª–æ–∂—å); spam [–∫–æ–ª-–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–∏] [—Ç–µ–∫—Å—Ç] (–æ–±—ä—è—Å–Ω—è—Ç—å –¥—É–º–∞—é –Ω–µ –Ω–∞–¥–æ)</b>
	''')
	
@app.on_message(filters.command("–∫–æ–ª–µ–Ω–∏", prefixes=".") & filters.me)
def thanos(_, msg):
    chat = msg.text.split(".–∫–æ–ª–µ–Ω–∏", maxsplit=1)[1]
 
    members = [
        x
        for x in app.iter_chat_members(chat)
        if x.status not in ("administrator", "creator")
    ]
 
    random.shuffle(members)
 
    app.send_message(chat, "–≤—Å–µ –Ω–∞—á–∏–Ω–∞—é—Ç –ø–æ–∫–ª–æ–Ω—è—Ç—å—Å—è")
 
    for i in range(len(members) // 2):
        try:
            app.restrict_chat_member(
                chat_id=chat,
                user_id=members[i].user.id,
                permissions=ChatPermissions(),
                until_date=int(time.time() + 86400),
            )
            app.send_message(chat, "–ø–æ–∫–ª–æ–Ω–∏–ª—Å—è –¥–∞—Ä–∫–æ–≤—É " + members[i].user.first_name)
        except FloodWait as e:
            print("> waiting", e.x, "seconds.")
            time.sleep(e.x)
 
    app.send_message(chat, "–≤—Å–µ –æ—Å—Ç–∞–ª–∏—Å—å —É–ø–∞–≤—à–∏–º–∏ –ø–µ—Ä–µ–¥ –Ω–æ–≥–∞–º–∏")
 
app.run()